{
    "$schema": "https://vega.github.io/schema/vega/v5.json",
    "description": "A calendar visualization of my dinners.",
    "padding": 5,

    "signals": [
        {"name": "step", "value": 16},
        {"name": "offset", "value": 10},
        {"name": "width", "update": "step * 52 + offset * 11"},
        {"name": "height", "update": "step * 5"},
        {
            "name": "data", "value": "type",
            "bind": {"element": "#data_select"}
        },
        {
            "name": "side_data",
            "value": {
                "main dish source": "side dish 1 source",
                "main dish cuisine": "side dish 1 cuisine"
            }
        },
        {
            "name": "palettes",
            "value": {
                "vegetarian": "vegetarian",
                "type": "type",
                "main dish cuisine": "cuisines",
                "protein": "protein",
                "alcohol": "alcohol",
                "main dish source": "set2"
            }
        },
        {
            "name": "domain",
            "description": "For some of the fields, we have a specific order we want the hues to be ordered in: this gives that order (allows us to make sure that, e.g., red wine is red). See data -> unique_vals for how this is used. That gets a new field, all_vals, which contains either the corresponding field from here or, if one's not defined (like 'main dish cuisine'), fills it in with corresponding field from datum. The transform after that flattens it so that the resulting 'flattened_values' contains all values (with duplicates) and can be passed as domain to the scale.",
            "value": {
                "vegetarian": ["vegan", "vegetarian", "pescatarian", "meat"],
                "alcohol": ["none", "white wine", "red wine"],
                "type": ["cooked", "leftovers", "frozen"],
                "protein": ["none", "tofu", "legumes", "mushrooms", "eggs", "meat"],
                "main dish cuisine": ["Indian", "Chinese", "Korean", "Filipino", "Italian", "Cuban", "Ethiopian", "Sudanese", "Iranian", "Israeli", "American", "global pantry"]
            }
        }
    ],

    "data": [
        {
            "name": "dinner",
            "url": "data/dinner.csv",
            "format": {"type": "csv", "parse": {"date": "date:'%Y-%m-%d'"}},
            "transform": [
                {
                    "type": "formula",
                    "expr": "year(datum.date)",
                    "as": "year"
                },
                {
                    "type": "timeunit", "field": "date",
                    "units": ["year", "week"],
                    "as": ["w0", "w1"]
                },
                {
                    "type": "timeunit", "field": "date",
                    "units": ["day"],
                    "as": ["d0", "d1"]
                },
                {
                    "type": "formula", "as": "protein",
                    "expr": "datum.protein ? datum.protein : 'none'"
                },
                {
                    "type": "formula", "as": "alcohol",
                    "expr": "datum.alcohol ? datum.alcohol : 'none'"
                },
                {
                    "type": "formula", "expr": "if(datum.vegan == 'yes', 'vegan', if(datum.vegetarian == 'yes', 'vegetarian', if(datum.pescatarian == 'yes', 'pescatarian', 'meat')))",
                    "as": "vegetarian"
                }
            ]
        },
        {
            "name": "unique_vals", "source": "dinner",
            "transform": [
                {"type": "formula", "as": "all_values", "expr": "domain[data] ? domain[data] : datum[side_data[data]] ? [datum[data], datum[side_data[data]]] : [datum[data]]"},
                {"type": "flatten", "as": ["flattened_values"], "fields": ["all_values"]}
            ]
        }
    ],

    "scales": [
        {
            "name": "y",
            "type": "band",
            "domain": {"data": "dinner", "field": "d0", "sort": true},
            "range": {"step": {"signal": "step"}}
        },
        {
            "name": "color",
            "type": "ordinal",
            "range": {"scheme": {"signal": "palettes[data]"}},
            "domain": {"data": "unique_vals", "field": "flattened_values"}
        }
    ],

    "legends": [
        {
            "fill": "color",
            "title": "",
            "titleFontSize": 12,
            "titleOrient": "left",
            "titlePadding": 20,
            "offset": 15,
            "orient": "top",
            "direction": "horizontal"
        }
    ],

    "layout": {
        "columns": 1,
        "padding": 15
    },

    "marks": [
        {
            "type": "group",

            "from": {
                "facet": {
                    "data": "dinner",
                    "name": "values",
                    "groupby": "year"
                }
            },

            "sort": {
                "field": "datum.year",
                "order": "descending"
            },

            "data": [
                {
                    "name": "max",
                    "source": "values",
                    "transform": [
                        {"type": "aggregate", "ops": ["max"], "fields": ["date"], "as": ["max"]},
                        {"type": "formula", "expr": "timeOffset('week', datum.max)", "as": "max"}
                    ]
                },
                {
                    "name": "weeks",
                    "transform": [
                        {"type": "sequence", "start": 0, "stop": 53, "as": "weeknum"},
                        {"type": "formula", "expr": "datetime(parent.year, 0, 1 + datum.weeknum * 7)", "as": "date"},
                        {"type": "timeunit", "units": ["year", "week"], "field": "date", "as": ["w0", "w1"]},
                        {"type": "filter", "expr": "datum.date < data('max')[0].max"}
                    ]
                }
            ],

            "scales": [
                {
                    "name": "x",
                    "type": "band",
                    "domain": {"data": "weeks", "field": "w0", "sort": true},
                    "range": {"step": {"signal": "step"}}
                }
            ],

            "axes": [
                {
                    "orient": "left", "scale": "y",
                    "ticks": false, "domain": false, "labelPadding": 8,
                    "format": "%a", "formatType": "time",
                    "title": {"signal": "parent.year"},
                    "titleAngle": 0, "titleAlign": "right",
                    "titleX": -8, "titleY": -2,  "titleFontSize": 10
                },
                {
                    "orient": "top", "scale": "x",
                    "ticks": false, "domain": false,
                    "format": "%b", "formatType": "time",
                    "labelAlign": "left",
                    "encode": {
                        "labels": {
                            "update": {
                                "x": {
                                    "scale": "x", "field": "value", "band": 0,
                                    "offset": {"signal": "month(datum.value) * offset"}
                                },
                                "opacity": {"signal": "date(datum.value) < 8 ? 1 : 0"}
                            }
                        }
                    }
                }
            ],
            "marks": [
                {"type": "group",
                 "marks": [
                     {
                         "type": "rect",
                         "from": {"data": "values"},
                         "encode": {
                             "enter": {
                                 "x": {"scale": "x", "field": "w0", "offset": {"signal": "month(datum.date) * offset"}},
                                 "width": {"scale": "x", "band": 1, "offset": -1},
                                 "y": {"scale": "y", "field": "d0"},
                                 "height": {"scale": "y", "band": 1, "offset": -1},
                                 "cornerRadius": {"value": 2},
                                 "tooltip": {"signal": "{'title': timeFormat(datum.date, '%a %b %d, %Y'), 'Main dish': datum['main dish'], 'Main dish source': datum['main dish source detail'] + ' (' + datum['main dish source'] + ')', 'Side dish': datum['side dish 1'], 'Side dish source': datum['side dish 1 source detail'] + (datum['side dish 1 source'] ? ' (' : '') + datum['side dish 1 source'] + (datum['side dish 1 source'] ? ')' : ''), 'Non-vegan ingredients': datum['non-vegan ingredient']}"},
                                 "cursor": {"signal": "datum['main dish source link'] ? 'pointer' : 'default'"},
                                 "href": {"field": "main dish source link", "type": "nominal"},
                                 "stroke": {"value": "#ffffff"}
                             },
                             "update": {
                                 "fill": {"scale": "color", "field": {"signal": "data"}}
                             }
                         }
                     },
                     {
                         "type": "rect",
                         "from": {"data": "values"},
                         "encode": {
                             "enter": {
                                 "x": {"scale": "x", "field": "w0", "offset": {"signal": "month(datum.date) * offset"}},
                                 "width": {"scale": "x", "band": 1, "offset": -8},
                                 "y": {"scale": "y", "field": "d0"},
                                 "height": {"scale": "y", "band": 1, "offset": -1},
                                 "cornerRadius": {"value": 2},
                                 "tooltip": {"signal": "{'title': timeFormat(datum.date, '%a %b %d, %Y'), 'Main dish': datum['main dish'], 'Main dish source': datum['main dish source detail'] + ' (' + datum['main dish source'] + ')', 'Side dish': datum['side dish 1'], 'Side dish source': datum['side dish 1 source detail'] + (datum['side dish 1 source'] ? ' (' : '') + datum['side dish 1 source'] + (datum['side dish 1 source'] ? ')' : ''), 'Non-vegan ingredients': datum['non-vegan ingredient']}"},
                                 "cursor": {"signal": "datum['side dish 1 source link'] ? 'pointer' : 'default'"},
                                 "href": {"field": "side dish 1 source link", "type": "nominal"},
                                 "stroke": {"value": "#ffffff"}
                             },
                             "update": {
                                 "fill": {"scale": "color", "field": {"signal": "side_data[data]"}},
                                 "strokeOpacity": {"signal": "side_data[data] && datum[side_data[data]] ? 1 : 0"}
                             }
                         }
                     }
                 ]
                }
            ]
        }
    ]
}
